{"version":3,"sources":["../../../src/plugins/SvgToPngExportPlugin.js"],"names":["_","svg2png","require","fs","path","mkdirp","SvgToPngExportPlugin","config","previousSettings","settings","outputDir","defaultsDeep","format","constructor","name","runAsync","request","response","logger","svgToPng","svg","fileName","isFunction","call","isString","inputPath","getFileName","absoluteOutputDir","resolve","process","cwd","filePath","Promise","reject","err","options","width","height","outputBuffer","writeFile","log","file","extension","extname","basename","module","exports"],"mappings":"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","file":"SvgToPngExportPlugin.js","sourcesContent":["// We have to use a local file and let babel ignore it, until pdfkit is ported to ES6\nconst svg2png = require(\"svg2png\");\nvar fs = require('fs');\nlet path = require('path');\nlet mkdirp = require('mkdirp');\nimport * as _ from 'lodash';\n\nclass SvgToPngExportPlugin {\n    set config(config) {\n        let previousSettings = this.settings;\n        if (!previousSettings) {\n            previousSettings = {\n                outputDir: \"./png\"\n            };\n        }\n        this.settings = _.defaultsDeep({}, config, previousSettings);\n        // enforce svg export\n        this.settings.format = 'png';\n    }\n    constructor(config) {\n        this.name = \"SvgToPngExportPlugin\";\n        this.config = config;\n    }\n    async runAsync(request, response, logger) {\n        if (request.svgToPng) {\n            this.config = request.svgToPng;\n        } else if (request.SvgToPngExportPlugin) {\n            this.config = request.SvgToPngExportPlugin;\n        }\n        if (!response.svg) {\n            return response;\n        }\n        let fileName = 'default';\n        if (_.isFunction(this.settings.fileName)) {\n            fileName = this.settings.fileName.call(this, request, response);\n        } else if (_.isString(this.settings.fileName)) {\n            fileName = this.settings.fileName;\n        } else if (request.inputPath) {\n            fileName = this.getFileName(request.inputPath);\n        }\n        const absoluteOutputDir = path.resolve(process.cwd(), this.settings.outputDir);\n        const filePath = absoluteOutputDir + '/' + fileName + '.png';\n        const settings = this.settings;\n        await new Promise((resolve, reject)=>{\n            mkdirp(absoluteOutputDir, function (err) {\n                if (err) {\n                    reject(err);\n                }\n                resolve();\n            });\n        });\n        const options = {};\n        if (settings.width) {\n            options.width = settings.width;\n        }\n        if (settings.height) {\n            options.height = settings.height;\n        }\n        const outputBuffer = await svg2png(response.svg, options);\n        await new Promise((resolve, reject)=>{\n            fs.writeFile(filePath, outputBuffer, function (err) {\n                if (err) {\n                    reject(err);\n                }\n                logger.log(\"verbose\", \"Saved \" + filePath);\n                resolve();\n            });\n        });\n        return response;\n    }\n    getFileName(file) {\n        let extension = path.extname(file);\n        return path.basename(file, extension);\n    }\n}\nmodule.exports = {\n    SvgToPngExportPlugin: SvgToPngExportPlugin\n}\n"]}