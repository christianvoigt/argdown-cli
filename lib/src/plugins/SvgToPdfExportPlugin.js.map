{"version":3,"sources":["../../../src/plugins/SvgToPdfExportPlugin.js"],"names":["_","PDFDocument","require","fs","path","mkdirp","SvgToPdfExportPlugin","config","previousSettings","settings","outputDir","defaultsDeep","format","constructor","name","runAsync","request","response","svgToPdf","svg","fileName","isFunction","call","isString","inputPath","getFileName","absoluteOutputDir","resolve","process","cwd","filePath","Promise","reject","err","doc","savePdfToFile","pdf","pendingStepCount","stepFinished","writeStream","createWriteStream","on","pipe","end","file","extension","extname","basename","module","exports"],"mappings":"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","file":"SvgToPdfExportPlugin.js","sourcesContent":["// We have to use a local file and let babel ignore it, until pdfkit is ported to ES6\nvar PDFDocument = require('../pdfkit.js');\nvar fs = require('fs');\nlet path = require('path');\nlet mkdirp = require('mkdirp');\nimport SVGtoPDF from 'svg-to-pdfkit';\nimport * as _ from 'lodash';\n\nclass SvgToPdfExportPlugin {\n    set config(config) {\n        let previousSettings = this.settings;\n        if (!previousSettings) {\n            previousSettings = {\n                outputDir: \"./pdf\"\n            };\n        }\n        this.settings = _.defaultsDeep({}, config, previousSettings);\n        // enforce svg export\n        this.settings.format = 'svg';\n    }\n    constructor(config) {\n        this.name = \"SvgToPdfExportPlugin\";\n        this.config = config;\n    }\n    async runAsync(request, response) {\n        if (request.svgToPdf) {\n            this.config = request.svgToPdf;\n        } else if (request.SvgToPdfExportPlugin) {\n            this.config = request.SvgToPdfExportPlugin;\n        }\n        if (!response.svg) {\n            return response;\n        }\n        let fileName = 'default';\n        if (_.isFunction(this.settings.fileName)) {\n            fileName = this.settings.fileName.call(this, request, response);\n        } else if (_.isString(this.settings.fileName)) {\n            fileName = this.settings.fileName;\n        } else if (request.inputPath) {\n            fileName = this.getFileName(request.inputPath);\n        }\n        const absoluteOutputDir = path.resolve(process.cwd(), this.settings.outputDir);\n        const filePath = absoluteOutputDir + '/' + fileName + '.pdf';\n        const settings = this.settings;\n        await new Promise((resolve, reject)=>{\n            mkdirp(absoluteOutputDir, function (err) {\n                if (err) {\n                    reject(err);\n                }\n                resolve();\n            });\n        });\n        var doc = new PDFDocument(settings);\n        SVGtoPDF(doc, response.svg, 0, 0, settings);\n        await this.savePdfToFile(doc, filePath);\n        return response;\n    }\n    // https://github.com/devongovett/pdfkit/issues/265\n    async savePdfToFile(pdf, fileName) {\n        return new Promise((resolve) => {\n\n            // To determine when the PDF has finished being written successfully \n            // we need to confirm the following 2 conditions:\n            //\n            //   1. The write stream has been closed\n            //   2. PDFDocument.end() was called syncronously without an error being thrown\n\n            let pendingStepCount = 2;\n\n            const stepFinished = () => {\n                if (--pendingStepCount == 0) {\n                    resolve();\n                }\n            };\n\n            const writeStream = fs.createWriteStream(fileName);\n            writeStream.on('close', stepFinished);\n            pdf.pipe(writeStream);\n\n            pdf.end();\n\n            stepFinished();\n        });\n    }\n    getFileName(file) {\n        let extension = path.extname(file);\n        return path.basename(file, extension);\n    }\n}\nmodule.exports = {\n    SvgToPdfExportPlugin: SvgToPdfExportPlugin\n}\n"]}