{"version":3,"sources":["../../../src/plugins/SvgToPdfExportPlugin.js"],"names":["_","PDFDocument","require","fs","path","mkdirp","SvgToPdfExportPlugin","config","previousSettings","settings","outputDir","defaultsDeep","format","name","data","logger","svgToPdf","svg","fileName","isFunction","call","isString","inputFile","getFileName","absoluteOutputDir","resolve","process","cwd","filePath","err","log","doc","pipe","createWriteStream","end","file","extension","extname","basename","module","exports"],"mappings":";;;;AAKA;;;;AACA;;IAAYA,C;;;;;;;;AANZ;AACA,IAAIC,cAAcC,QAAQ,cAAR,CAAlB;AACA,IAAIC,KAAKD,QAAQ,IAAR,CAAT;AACA,IAAIE,OAAOF,QAAQ,MAAR,CAAX;AACA,IAAIG,SAASH,QAAQ,QAAR,CAAb;;IAIMI,oB;;;0BACSC,M,EAAQ;AACf,gBAAIC,mBAAmB,KAAKC,QAA5B;AACA,gBAAI,CAACD,gBAAL,EAAuB;AACnBA,mCAAmB;AACfE,+BAAW;AADI,iBAAnB;AAGH;AACD,iBAAKD,QAAL,GAAgBT,EAAEW,YAAF,CAAe,EAAf,EAAmBJ,MAAnB,EAA2BC,gBAA3B,CAAhB;AACA;AACA,iBAAKC,QAAL,CAAcG,MAAd,GAAuB,KAAvB;AACH;;;AACD,kCAAYL,MAAZ,EAAoB;AAAA;;AAChB,aAAKM,IAAL,GAAY,sBAAZ;AACA,aAAKN,MAAL,GAAcA,MAAd;AACH;;;;4BACGO,I,EAAMC,M,EAAQ;AACd,gBAAID,KAAKP,MAAT,EAAiB;AACb,oBAAIO,KAAKP,MAAL,CAAYS,QAAhB,EAA0B;AACtB,yBAAKT,MAAL,GAAcO,KAAKP,MAAL,CAAYS,QAA1B;AACH,iBAFD,MAEO,IAAIF,KAAKP,MAAL,CAAYD,oBAAhB,EAAsC;AACzC,yBAAKC,MAAL,GAAcO,KAAKP,MAAL,CAAYD,oBAA1B;AACH;AACJ;AACD,gBAAI,CAACQ,KAAKG,GAAV,EAAe;AACX,uBAAOH,IAAP;AACH;AACD,gBAAII,WAAW,SAAf;AACA,gBAAIlB,EAAEmB,UAAF,CAAa,KAAKV,QAAL,CAAcS,QAA3B,CAAJ,EAA0C;AACtCA,2BAAW,KAAKT,QAAL,CAAcS,QAAd,CAAuBE,IAAvB,CAA4B,IAA5B,EAAkCN,IAAlC,CAAX;AACH,aAFD,MAEO,IAAId,EAAEqB,QAAF,CAAW,KAAKZ,QAAL,CAAcS,QAAzB,CAAJ,EAAwC;AAC3CA,2BAAW,KAAKT,QAAL,CAAcS,QAAzB;AACH,aAFM,MAEA,IAAIJ,KAAKQ,SAAT,EAAoB;AACvBJ,2BAAW,KAAKK,WAAL,CAAiBT,KAAKQ,SAAtB,CAAX;AACH;AACD,gBAAME,oBAAoBpB,KAAKqB,OAAL,CAAaC,QAAQC,GAAR,EAAb,EAA4B,KAAKlB,QAAL,CAAcC,SAA1C,CAA1B;AACA,gBAAMkB,WAAWJ,oBAAoB,GAApB,GAA0BN,QAA1B,GAAqC,MAAtD;AACA,gBAAMT,WAAW,KAAKA,QAAtB;AACAJ,mBAAOmB,iBAAP,EAA0B,UAAUK,GAAV,EAAe;AACrC,oBAAIA,GAAJ,EAAS;AACLd,2BAAOe,GAAP,CAAW,OAAX,EAAoBD,GAApB;AACH,iBAFD,MAEO;AACH,wBAAIE,MAAM,IAAI9B,WAAJ,CAAgBQ,QAAhB,CAAV;AACAsB,wBAAIC,IAAJ,CAAS7B,GAAG8B,iBAAH,CAAqBL,QAArB,CAAT;AACA,+CAASG,GAAT,EAAcjB,KAAKG,GAAnB,EAAwB,CAAxB,EAA2B,CAA3B,EAA8BR,QAA9B;AACAsB,wBAAIG,GAAJ;AACH;AACJ,aATD;AAUA,mBAAOpB,IAAP;AACH;;;oCACWqB,I,EAAM;AACd,gBAAIC,YAAYhC,KAAKiC,OAAL,CAAaF,IAAb,CAAhB;AACA,mBAAO/B,KAAKkC,QAAL,CAAcH,IAAd,EAAoBC,SAApB,CAAP;AACH;;;;;;AAELG,OAAOC,OAAP,GAAiB;AACblC,0BAAsBA;AADT,CAAjB","file":"SvgToPdfExportPlugin.js","sourcesContent":["// We have to use a local file and let babel ignore it, until pdfkit is ported to ES6\nvar PDFDocument = require('../pdfkit.js');\nvar fs = require('fs');\nlet path = require('path');\nlet mkdirp = require('mkdirp');\nimport SVGtoPDF from 'svg-to-pdfkit';\nimport * as _ from 'lodash';\n\nclass SvgToPdfExportPlugin {\n    set config(config) {\n        let previousSettings = this.settings;\n        if (!previousSettings) {\n            previousSettings = {\n                outputDir: \"./pdf\"\n            };\n        }\n        this.settings = _.defaultsDeep({}, config, previousSettings);\n        // enforce svg export\n        this.settings.format = 'svg';\n    }\n    constructor(config) {\n        this.name = \"SvgToPdfExportPlugin\";\n        this.config = config;\n    }\n    run(data, logger) {\n        if (data.config) {\n            if (data.config.svgToPdf) {\n                this.config = data.config.svgToPdf;\n            } else if (data.config.SvgToPdfExportPlugin) {\n                this.config = data.config.SvgToPdfExportPlugin;\n            }\n        }\n        if (!data.svg) {\n            return data;\n        }\n        let fileName = 'default';\n        if (_.isFunction(this.settings.fileName)) {\n            fileName = this.settings.fileName.call(this, data);\n        } else if (_.isString(this.settings.fileName)) {\n            fileName = this.settings.fileName;\n        } else if (data.inputFile) {\n            fileName = this.getFileName(data.inputFile);\n        }\n        const absoluteOutputDir = path.resolve(process.cwd(), this.settings.outputDir);\n        const filePath = absoluteOutputDir + '/' + fileName + '.pdf';\n        const settings = this.settings;\n        mkdirp(absoluteOutputDir, function (err) {\n            if (err) {\n                logger.log(\"error\", err);\n            } else {\n                var doc = new PDFDocument(settings);\n                doc.pipe(fs.createWriteStream(filePath));\n                SVGtoPDF(doc, data.svg, 0, 0, settings);\n                doc.end();\n            }\n        });\n        return data;\n    }\n    getFileName(file) {\n        let extension = path.extname(file);\n        return path.basename(file, extension);\n    }\n}\nmodule.exports = {\n    SvgToPdfExportPlugin: SvgToPdfExportPlugin\n}\n"]}