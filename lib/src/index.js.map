{"version":3,"sources":["../../src/index.js"],"names":["_","readFile","glob","require","path","chokidar","requireUncached","app","includePlugin","parserPlugin","logParserErrorsPlugin","modelPlugin","htmlExport","tagPlugin","mapMaker","dotExport","jsonExport","saveAsHtml","outputDir","dataKey","extension","copyDefaultCss","dotToSvgExport","saveSvgAsSvg","saveSvgAsPdf","saveAsDot","saveAsJSON","saveAsArgdown","isRequestData","stdoutDot","stdoutSvg","stdoutJSON","stdoutHtml","stdoutArgdown","addPlugin","load","config","request","defaults","inputGlob","inputPath","ignoreFiles","ignore","logger","isFunction","log","setLevel","defaultLogger","rootPath","process","cwd","logLevel","plugins","pluginData","isObject","plugin","isString","processor","input","runAsync","clone","$","absoluteInputGlob","resolve","loadOptions","watch","watcher","watcherRequest","cloneDeep","on","files","Promise","reject","er","promises","file","push","then","requestForFile","all","loadJSFile","filePath","absoluteFilePath","e","message","loadConfig","jsModuleExports","AsyncArgdownApplication","CopyDefaultCssPlugin","SaveAsFilePlugin","SvgToPdfExportPlugin","LogParserErrorsPlugin","DotToSvgExportPlugin","utils"],"mappings":"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","file":"index.js","sourcesContent":["\"use strict\";\n\nimport { AsyncArgdownApplication } from \"./AsyncArgdownApplication.js\";\nimport { ParserPlugin, ModelPlugin, HtmlExport, JSONExport, TagPlugin, utils } from \"argdown-parser\";\nimport { MapMaker, DotExport } from \"argdown-map-maker\";\nimport { SaveAsFilePlugin } from \"./plugins/SaveAsFilePlugin.js\";\nimport { DotToSvgExportPlugin } from \"./plugins/DotToSvgExportPlugin.js\";\nimport { SvgToPdfExportPlugin } from \"./plugins/SvgToPdfExportPlugin.js\";\nimport { CopyDefaultCssPlugin } from \"./plugins/CopyDefaultCssPlugin.js\";\nimport { LogParserErrorsPlugin } from \"./plugins/LogParserErrorsPlugin.js\";\nimport { StdOutPlugin } from \"./plugins/StdOutPlugin.js\";\nimport { IncludePlugin } from \"./plugins/IncludePlugin.js\";\nimport * as _ from \"lodash\";\nimport fs from \"fs\";\nimport { promisify } from \"util\";\n\nconst readFile = promisify(fs.readFile);\n\nlet glob = require(\"glob\");\nlet path = require(\"path\");\nlet chokidar = require(\"chokidar\");\nlet requireUncached = require(\"require-uncached\");\n\nconst app = new AsyncArgdownApplication();\nconst includePlugin = new IncludePlugin();\nconst parserPlugin = new ParserPlugin();\nconst logParserErrorsPlugin = new LogParserErrorsPlugin();\nconst modelPlugin = new ModelPlugin();\nconst htmlExport = new HtmlExport();\nconst tagPlugin = new TagPlugin();\nconst mapMaker = new MapMaker();\nconst dotExport = new DotExport();\nconst jsonExport = new JSONExport();\nconst saveAsHtml = new SaveAsFilePlugin({\n  outputDir: \"./html\",\n  dataKey: \"html\",\n  extension: \".html\"\n});\nconst copyDefaultCss = new CopyDefaultCssPlugin();\nconst dotToSvgExport = new DotToSvgExportPlugin();\nconst saveSvgAsSvg = new SaveAsFilePlugin({\n  outputDir: \"./svg\",\n  dataKey: \"svg\",\n  extension: \".svg\"\n});\nconst saveSvgAsPdf = new SvgToPdfExportPlugin();\n\nconst saveAsDot = new SaveAsFilePlugin({\n  outputDir: \"./dot\",\n  dataKey: \"dot\",\n  extension: \".dot\"\n});\nconst saveAsJSON = new SaveAsFilePlugin({\n  outputDir: \"./json\",\n  dataKey: \"json\",\n  extension: \".json\"\n});\nconst saveAsArgdown = new SaveAsFilePlugin({\n  outputDir: \"./compiled\",\n  dataKey: \"input\",\n  extension: \".argdown\",\n  isRequestData: true\n});\nconst stdoutDot = new StdOutPlugin({ dataKey: \"dot\" });\nconst stdoutSvg = new StdOutPlugin({ dataKey: \"svg\" });\nconst stdoutJSON = new StdOutPlugin({ dataKey: \"json\" });\nconst stdoutHtml = new StdOutPlugin({ dataKey: \"html\" });\nconst stdoutArgdown = new StdOutPlugin({\n  dataKey: \"input\",\n  isRequestData: true\n});\n\napp.addPlugin(includePlugin, \"preprocessor\");\napp.addPlugin(parserPlugin, \"parse-input\");\napp.addPlugin(logParserErrorsPlugin, \"log-parser-errors\");\napp.addPlugin(modelPlugin, \"build-model\");\napp.addPlugin(tagPlugin, \"build-model\");\n\napp.addPlugin(stdoutArgdown, \"stdout-argdown\");\napp.addPlugin(saveAsArgdown, \"save-as-argdown\");\n\napp.addPlugin(htmlExport, \"export-html\");\napp.addPlugin(copyDefaultCss, \"copy-default-css\");\napp.addPlugin(saveAsHtml, \"save-as-html\");\napp.addPlugin(stdoutHtml, \"stdout-html\");\n\napp.addPlugin(mapMaker, \"export-json\");\napp.addPlugin(jsonExport, \"export-json\");\napp.addPlugin(saveAsJSON, \"save-as-json\");\napp.addPlugin(stdoutJSON, \"stdout-json\");\n\napp.addPlugin(mapMaker, \"export-dot\");\napp.addPlugin(dotExport, \"export-dot\");\napp.addPlugin(saveAsDot, \"save-as-dot\");\napp.addPlugin(stdoutDot, \"stdout-dot\");\napp.addPlugin(dotToSvgExport, \"export-svg\");\napp.addPlugin(saveSvgAsSvg, \"save-svg-as-svg\");\napp.addPlugin(stdoutSvg, \"stdout-svg\");\napp.addPlugin(saveSvgAsPdf, \"save-svg-as-pdf\");\n\napp.load = async function(config) {\n  const request = _.defaults({}, config);\n  const inputGlob = request.inputPath || \"./*.argdown\";\n  const ignoreFiles = request.ignore || [\n    \"**/_*\", // Exclude files starting with '_'.\n    \"**/_*/**\" // Exclude entire directories starting with '_'.\n  ];\n  \n  if(request.logger && _.isFunction(request.logger.log) && _.isFunction(request.logger.setLevel)){\n    if(!app.defaultLogger){\n      app.defaultLogger = app.logger;\n    }\n    app.logger = request.logger;\n  }else if(app.defaultLogger){\n    app.logger = app.defaultLogger;\n  }\n\n  if (!request.rootPath) {\n    request.rootPath = process.cwd();\n  }\n  if (request.logLevel) {\n    app.logger.setLevel(request.logLevel);\n  }\n  if (request.plugins) {\n    for (let pluginData of request.plugins) {\n      if (_.isObject(pluginData.plugin) && _.isString(pluginData.processor)) {\n        app.addPlugin(pluginData.plugin, pluginData.processor);\n      }\n    }\n  }\n  if (request.input && !request.inputPath) {\n    await app.runAsync(_.clone(request));\n    return;\n  }\n\n  const $ = this;\n  let absoluteInputGlob = path.resolve(request.rootPath, inputGlob);\n  const loadOptions = {};\n  if (ignoreFiles) {\n    loadOptions.ignore = ignoreFiles;\n  }\n  if (request.watch) {\n    const watcher = chokidar.watch(absoluteInputGlob, loadOptions);\n    const watcherRequest = _.cloneDeep(request);\n    watcherRequest.watch = false;\n\n    watcher\n      .on(\"add\", path => {\n        app.logger.log(\"verbose\", `File ${path} has been added.`);\n        watcherRequest.inputPath = path;\n        $.load(loadOptions);\n      })\n      .on(\"change\", path => {\n        app.logger.log(\"verbose\", `File ${path} has been changed.`);\n        watcherRequest.inputPath = path;\n        $.load(loadOptions);\n      })\n      .on(\"unlink\", path => {\n        app.logger.log(\"verbose\", `File ${path} has been removed.`);\n      });\n  } else {\n    let files = await new Promise((resolve, reject) => {\n      glob(absoluteInputGlob, loadOptions, function(er, files) {\n        if (er) {\n          reject(er);\n        }\n        resolve(files);\n      });\n    });\n    const promises = [];\n    for (let file of files) {\n      app.logger.log(\"verbose\", \"Reading file: \" + file);\n      promises.push(\n        readFile(file, \"utf8\").then(input => {\n          app.logger.log(\"verbose\", \"Reading file completed, starting processing: \" + file);\n          const requestForFile = _.clone(request);\n          requestForFile.input = input;\n          requestForFile.inputPath = file;\n          return $.runAsync(requestForFile);\n        })\n      );\n    }\n    await Promise.all(promises);\n  }\n};\n\n/**\n * Taken from eslint: https://github.com/eslint/eslint/blob/master/lib/config/config-file.js\n * Loads a JavaScript configuration from a file.\n * @param {string} filePath The filename to load.\n * @returns {Object} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\napp.loadJSFile = function loadJSFile(filePath) {\n  let absoluteFilePath = path.resolve(process.cwd(), filePath);\n  try {\n    return requireUncached(absoluteFilePath);\n  } catch (e) {\n    e.message = `Cannot read file: ${absoluteFilePath}\\nError: ${e.message}`;\n    throw e;\n  }\n};\n\napp.loadConfig = function(filePath) {\n  filePath = filePath || \"./argdown.config.js\";\n  let config = {};\n  try {\n    let jsModuleExports = this.loadJSFile(filePath);\n    if (jsModuleExports.config) {\n      config = jsModuleExports.config;\n    } else {\n      // let's try the default export\n      config = jsModuleExports;\n    }\n  } catch (e) {\n    app.logger.log(\"verbose\", \"No config found: \" + e);\n  }\n  return config;\n};\n\nexport {\n  AsyncArgdownApplication,\n  app,\n  CopyDefaultCssPlugin,\n  SaveAsFilePlugin,\n  SvgToPdfExportPlugin,\n  LogParserErrorsPlugin,\n  DotToSvgExportPlugin,\n  utils\n};\n"]}