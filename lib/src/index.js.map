{"version":3,"sources":["../../src/index.js"],"names":["_","glob","require","fs","path","chokidar","requireUncached","app","includePlugin","parserPlugin","logParserErrorsPlugin","modelPlugin","htmlExport","tagPlugin","mapMaker","dotExport","argmlExport","jsonExport","saveAsHtml","outputDir","dataKey","extension","copyDefaultCss","saveAsDot","saveAsArgML","saveAsJSON","saveAsArgdown","stdoutDot","stdoutArgML","stdoutJSON","stdoutHtml","stdoutArgdown","addPlugin","load","config","inputGlob","input","ignoreFiles","ignore","options","$","absoluteInputGlob","resolve","process","cwd","watch","watcher","watcherConfig","cloneDeep","on","verbose","console","log","er","files","file","readFileSync","saveAs","sourceFile","run","inputFile","e","loadJSFile","filePath","absoluteFilePath","message","loadConfig","jsModuleExports","CopyDefaultCssPlugin","SaveAsFilePlugin"],"mappings":"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","file":"index.js","sourcesContent":["import {ArgdownApplication, ParserPlugin, ModelPlugin, HtmlExport, JSONExport, TagPlugin} from 'argdown-parser';\nimport {MapMaker, DotExport, ArgMLExport} from 'argdown-map-maker';\nimport {SaveAsFilePlugin} from './plugins/SaveAsFilePlugin.js';\nimport {CopyDefaultCssPlugin} from './plugins/CopyDefaultCssPlugin.js';\nimport { LogParserErrorsPlugin } from './plugins/LogParserErrorsPlugin.js';\nimport {StdOutPlugin} from './plugins/StdOutPlugin.js';\nimport {IncludePlugin} from './plugins/IncludePlugin.js';\nimport * as _ from 'lodash';\n\nlet glob = require('glob');\nlet fs = require('fs');\nlet path = require('path');\nlet chokidar = require('chokidar');\nlet requireUncached = require(\"require-uncached\");\n\nconst app = new ArgdownApplication();\nconst includePlugin = new IncludePlugin();\nconst parserPlugin = new ParserPlugin();\nconst logParserErrorsPlugin = new LogParserErrorsPlugin();\nconst modelPlugin = new ModelPlugin();\nconst htmlExport = new HtmlExport();\nconst tagPlugin = new TagPlugin();\nconst mapMaker = new MapMaker();\nconst dotExport = new DotExport();\nconst argmlExport = new ArgMLExport();\nconst jsonExport = new JSONExport();\nconst saveAsHtml = new SaveAsFilePlugin({\n  outputDir: './html',\n  dataKey: 'html',\n  extension: '.html'\n});\nconst copyDefaultCss = new CopyDefaultCssPlugin();\n\nconst saveAsDot = new SaveAsFilePlugin({\n  outputDir: './dot',\n  dataKey: 'dot',\n  extension: '.dot'\n});\nconst saveAsArgML = new SaveAsFilePlugin({\n  outputDir: './graphml',\n  dataKey: 'argml',\n  extension: '.graphml'\n});\nconst saveAsJSON = new SaveAsFilePlugin({\n  outputDir: './json',\n  dataKey: 'json',\n  extension: '.json'\n});\nconst saveAsArgdown = new SaveAsFilePlugin({\n  outputDir: './compiled',\n  dataKey: 'input',\n  extension: '.argdown'\n});\nconst stdoutDot = new StdOutPlugin({dataKey:'dot'});\nconst stdoutArgML = new StdOutPlugin({dataKey:'argml'});\nconst stdoutJSON = new StdOutPlugin({dataKey:'json'});\nconst stdoutHtml = new StdOutPlugin({dataKey:'html'});\nconst stdoutArgdown = new StdOutPlugin({dataKey:'input'});\n\napp.addPlugin(includePlugin, 'preprocessor');\napp.addPlugin(parserPlugin, 'parse-input');\napp.addPlugin(logParserErrorsPlugin, \"log-parser-errors\");\napp.addPlugin(modelPlugin, \"build-model\");\napp.addPlugin(tagPlugin, \"build-model\");\n\napp.addPlugin(stdoutArgdown, 'stdout-argdown');\napp.addPlugin(saveAsArgdown, 'save-as-argdown');\n\napp.addPlugin(htmlExport, \"export-html\");\napp.addPlugin(copyDefaultCss, \"copy-default-css\");\napp.addPlugin(saveAsHtml, \"save-as-html\");\napp.addPlugin(stdoutHtml, \"stdout-html\");\n\napp.addPlugin(mapMaker, \"export-json\");\napp.addPlugin(jsonExport, \"export-json\");\napp.addPlugin(saveAsJSON, \"save-as-json\");\napp.addPlugin(stdoutJSON, \"stdout-json\");\n\napp.addPlugin(mapMaker, \"export-dot\");\napp.addPlugin(dotExport, \"export-dot\");\napp.addPlugin(saveAsDot, \"save-as-dot\");\napp.addPlugin(stdoutDot, \"stdout-dot\");\n\napp.addPlugin(mapMaker, \"export-argml\");\napp.addPlugin(argmlExport, \"export-argml\");\napp.addPlugin(saveAsArgML, \"save-as-argml\");\napp.addPlugin(stdoutArgML, \"stdout-argml\");\n\napp.load = function(config){\n  const inputGlob = config.input ||'./*.argdown';\n  const ignoreFiles = config.ignore ||[\n        '**/_*',        // Exclude files starting with '_'.\n        '**/_*/**'  // Exclude entire directories starting with '_'.\n    ];\n  const options = {};\n  if(ignoreFiles){\n    options.ignore = ignoreFiles;\n  }\n    \n  const $ = this;\n  let absoluteInputGlob = path.resolve(process.cwd(),inputGlob);\n  if(config.watch){\n    const watcher = chokidar.watch(absoluteInputGlob, options);\n    const watcherConfig = _.cloneDeep(config);\n    watcherConfig.watch = false;\n    \n    watcher\n    .on('add', path => {\n      if(config.verbose){\n        console.log(`File ${path} has been added.`);        \n      }\n      watcherConfig.input = path;\n      $.load(watcherConfig);\n    })\n    .on('change', path => {\n      if(config.verbose){\n        console.log(`File ${path} has been changed.`);        \n      }\n      watcherConfig.input = path;\n      $.load(watcherConfig);\n    })\n    .on('unlink', path => {\n      if(config.verbose){\n        console.log(`File ${path} has been removed.`);        \n      }\n    });    \n  }else{\n    glob(absoluteInputGlob, options, function (er, files) {\n      if(er){\n        console.log(er);\n        return;\n      }else{\n        for(let file of files){\n          if(config.verbose){\n            console.log(\"Processing file: \"+file);\n          }\n          try{\n            const input = fs.readFileSync(file, 'utf8');\n            config.saveAs = config.saveAs ||{};\n            config.saveAs.sourceFile = file;\n            $.run({input: input, inputFile: file, config:config});\n          }catch(e){\n            console.log(e);\n          }\n        }\n      }\n    });    \n  }\n}\n\n/**\n * Taken from eslint: https://github.com/eslint/eslint/blob/master/lib/config/config-file.js\n * Loads a JavaScript configuration from a file.\n * @param {string} filePath The filename to load.\n * @returns {Object} The configuration object from the file.\n * @throws {Error} If the file cannot be read.\n * @private\n */\napp.loadJSFile = function loadJSFile(filePath) {\n    let absoluteFilePath = path.resolve(process.cwd(), filePath);\n    try {\n        return requireUncached(absoluteFilePath);\n    } catch (e) {\n        e.message = `Cannot read file: ${absoluteFilePath}\\nError: ${e.message}`;\n        throw e;\n    }\n}\n\napp.loadConfig = function(filePath){\n  filePath = filePath || './argdown.config.js';\n  let config = {};\n  try{\n    let jsModuleExports = this.loadJSFile(filePath);\n    if(jsModuleExports.config){\n      config = jsModuleExports.config;\n    }else{ // let's try the default export\n      config = jsModuleExports;\n    }\n  }catch(e){\n    // console.log(e);\n  }\n  return config;\n}\n\nexport {\n  app, CopyDefaultCssPlugin, SaveAsFilePlugin\n};\n"]}