{"version":3,"sources":["../../src/SaveAsFilePlugin.js"],"names":["_","fs","require","path","mkdirp","SaveAsFilePlugin","config","settings","defaults","dataKey","fileName","extension","outputDir","name","data","fileContent","isEmpty","isString","sourceFile","getFileName","isFunction","call","saveAsFile","file","extname","basename","mkDir","writeFile","err","console","log","module","exports"],"mappings":";;;;AAGA;;IAAYA,C;;;;;;AAHZ,IAAIC,KAAKC,QAAQ,IAAR,CAAT;AACA,IAAIC,OAAOD,QAAQ,MAAR,CAAX;AACA,IAAIE,SAASF,QAAQ,QAAR,CAAb;;IAGMG,gB;;;sBACOC,M,EAAO;AAChB,WAAKC,QAAL,GAAgBP,EAAEQ,QAAF,CAAWF,UAAS,EAApB,EAAwB;AACtCG,iBAAU,MAD4B;AAEtCC,kBAAW,SAF2B;AAGtCC,mBAAY,MAH0B;AAItCC,mBAAY;AAJ0B,OAAxB,CAAhB;AAMD;;;AACD,4BAAYN,MAAZ,EAAmB;AAAA;;AACjB,SAAKO,IAAL,GAAY,kBAAZ;AACA,SAAKP,MAAL,GAAcA,MAAd;AACD;;;;wBACGQ,I,EAAK;AACP,UAAIC,cAAcD,KAAK,KAAKP,QAAL,CAAcE,OAAnB,CAAlB;AACA,UAAG,CAACT,EAAEgB,OAAF,CAAUD,WAAV,CAAD,IAA2Bf,EAAEiB,QAAF,CAAWF,WAAX,CAA9B,EAAsD;AACpD,YAAIL,WAAW,SAAf;AACA,YAAG,CAACV,EAAEgB,OAAF,CAAU,KAAKT,QAAL,CAAcW,UAAxB,CAAD,IAAwClB,EAAEiB,QAAF,CAAW,KAAKV,QAAL,CAAcW,UAAzB,CAA3C,EAAgF;AAC9ER,qBAAW,KAAKS,WAAL,CAAiB,KAAKZ,QAAL,CAAcW,UAA/B,CAAX;AACD,SAFD,MAEM,IAAGlB,EAAEoB,UAAF,CAAa,KAAKb,QAAL,CAAcG,QAA3B,CAAH,EAAwC;AAC5CA,qBAAW,KAAKH,QAAL,CAAcG,QAAd,CAAuBW,IAAvB,CAA4B,IAA5B,EAAkCP,IAAlC,CAAX;AACD,SAFK,MAEA,IAAGA,KAAKI,UAAR,EAAmB;AACvBR,qBAAW,KAAKS,WAAL,CAAiBL,KAAKI,UAAtB,CAAX;AACD,SAFK,MAEA,IAAGlB,EAAEiB,QAAF,CAAW,KAAKV,QAAL,CAAcG,QAAzB,CAAH,EAAsC;AAC1CA,qBAAW,KAAKH,QAAL,CAAcG,QAAzB;AACD;AACD,aAAKY,UAAL,CAAgBP,WAAhB,EAA6B,KAAKR,QAAL,CAAcK,SAA3C,EAAsDF,QAAtD,EAAgE,KAAKH,QAAL,CAAcI,SAA9E;AACD;AACF;;;gCACWY,I,EAAK;AACf,UAAIZ,YAAYR,KAAKqB,OAAL,CAAaD,IAAb,CAAhB;AACA,aAAOpB,KAAKsB,QAAL,CAAcF,IAAd,EAAmBZ,SAAnB,CAAP;AACD;;;+BACUG,I,EAAMF,S,EAAWF,Q,EAAUC,S,EAAU;AAC9C,WAAKe,KAAL,CAAWd,SAAX;AACA;AACAX,SAAG0B,SAAH,CAAaf,YAAW,GAAX,GAAeF,QAAf,GAAwBC,SAArC,EAAgDG,IAAhD,EAAsD,UAASc,GAAT,EAAc;AAChE,YAAGA,GAAH,EAAQ;AACJ,iBAAOC,QAAQC,GAAR,CAAYF,GAAZ,CAAP;AACH;AACDC,gBAAQC,GAAR,CAAY,cAAYpB,QAAZ,GAAqB,MAArB,GAA4BE,SAA5B,GAAsC,GAAtC,GAA0CF,QAA1C,GAAmDC,SAA/D;AACH,OALD;AAMD;;;0BACKC,S,EAAU;AACdR,aAAOQ,SAAP,EAAkB,UAAUgB,GAAV,EAAe;AAC/B,YAAIA,GAAJ,EAAQ;AACNC,kBAAQC,GAAR,CAAYF,GAAZ;AACD;AACF,OAJD;AAKD;;;;;;AAGHG,OAAOC,OAAP,GAAiB;AACf3B,oBAAkBA;AADH,CAAjB","file":"SaveAsFilePlugin.js","sourcesContent":["let fs = require('fs');\nlet path = require('path');\nlet mkdirp = require('mkdirp');\nimport * as _ from 'lodash';\n\nclass SaveAsFilePlugin{\n  set config(config){\n    this.settings = _.defaults(config ||{}, {\n      dataKey : \"test\",\n      fileName : \"default\",\n      extension : \".txt\",\n      outputDir : \".\"\n    });\n  }\n  constructor(config){\n    this.name = \"SaveAsFilePlugin\";\n    this.config = config;\n  }\n  run(data){\n    let fileContent = data[this.settings.dataKey];\n    if(!_.isEmpty(fileContent) && _.isString(fileContent)){\n      let fileName = \"default\";\n      if(!_.isEmpty(this.settings.sourceFile) && _.isString(this.settings.sourceFile)){\n        fileName = this.getFileName(this.settings.sourceFile);\n      }else if(_.isFunction(this.settings.fileName)){\n        fileName = this.settings.fileName.call(this, data);\n      }else if(data.sourceFile){\n        fileName = this.getFileName(data.sourceFile);\n      }else if(_.isString(this.settings.fileName)){\n        fileName = this.settings.fileName;\n      }\n      this.saveAsFile(fileContent, this.settings.outputDir, fileName, this.settings.extension);\n    }\n  }\n  getFileName(file){\n    let extension = path.extname(file);\n    return path.basename(file,extension);\n  }\n  saveAsFile(data, outputDir, fileName, extension){\n    this.mkDir(outputDir);\n    //let dirName = path.dirname(output);\n    fs.writeFile(outputDir +'/'+fileName+extension, data, function(err) {\n        if(err) {\n            return console.log(err);\n        }\n        console.log(\"Exported \"+fileName+\" to \"+outputDir+\"/\"+fileName+extension);\n    });\n  }\n  mkDir(outputDir){\n    mkdirp(outputDir, function (err) {\n      if (err){\n        console.log(err);\n      }\n    });\n  }\n}\n\nmodule.exports = {\n  SaveAsFilePlugin: SaveAsFilePlugin\n}\n"]}