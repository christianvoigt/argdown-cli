{"version":3,"sources":["../../../src/commands/DotCommand.js"],"names":["command","desc","builder","useHtmlLabels","alias","describe","type","argumentLabelMode","choices","undefined","statementLabelMode","statementSelectionMode","graphName","lineLength","groupColors","inclusive","rankdir","concentrate","ratio","size","handler","argv","config","loadConfig","dot","DotExport","map","MapMaker","excludeDisconnected","graphname","graphVizSettings","concentration","contentration","inputGlob","input","saveAs","SaveAsFilePlugin","outputDir","verbose","watch","process","stdout","push","load"],"mappings":"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","file":"DotCommand.js","sourcesContent":["import {app} from '../index.js';\n\nexport const command = 'dot [inputGlob] [outputDir]';\nexport const desc = 'export Argdown input as DOT files';\nexport const builder = {\n  useHtmlLabels: {\n    alias: 'html-labels',\n    describe: 'Use HTML node labels',\n    type: 'boolean'\n  },\n  argumentLabelMode: {\n    alias: 'argument-labels',\n    choices: [undefined, 'hide-untitled','title','description'],\n    type: 'string',\n    describe: 'The method by which argument label content is selected'\n  },\n  statementLabelMode: {\n    alias: 'statement-labels',\n    choices: [undefined, 'hide-untitled','title','text'],\n    type: 'string',\n    describe: 'The method by which statement label content is selected'\n  },\n  statementSelectionMode: {\n    alias: 'statement-selection',\n    type: 'string',\n    choices: [undefined, 'all','titled','roots','statement-trees','with-relations'],\n  },\n  graphName: {\n    alias: 'name',\n    type: 'string',\n    describe: 'Name of the graph',\n  },\n  lineLength: {\n    alias: 'line',\n    type: 'number',\n    describe: 'Number of chars in a label line.'\n  },\n  groupColors: {\n    type: 'array',\n    describe: 'Colors for groups sorted by stacking order'\n  },\n  inclusive: {\n    type: 'boolean',\n    describe: 'Include disconnected nodes.'\n  },\n  rankdir: {\n    type: 'string',\n    describe: 'Graphviz rankdir setting'\n  },\n  concentrate: {\n    type: 'string',\n    describe: 'Graphviz concentrate setting'\n  },\n  ratio: {\n    type: 'string',\n    describe: 'Graphviz ratio setting'\n  },\n  size: {\n    type: 'string',\n    describe: 'Graphviz size setting'\n  }\n};\nexport const handler = function(argv){\n  let config = app.loadConfig(argv.config);\n  \n  config.dot = config.dot || config.DotExport ||{};\n  config.map = config.map ||config.MapMaker ||{};\n\n  if(argv.useHtmlLabels){\n    config.dot.useHtmlLabels = true;        \n  }\n\n  if(argv.argumentLabelMode){\n    config.dot.argumentLabelMode = argv.argumentLabelMode;        \n  }\n  if(argv.statementLabelMode){\n    config.dot.statementLabelMode = argv.statementLabelMode;        \n  }\n  if(argv.statementSelectionMode){\n    config.map.statementSelectionMode = argv.statementSelectionMode;\n  }        \n  if(argv.inclusive){\n    config.map.excludeDisconnected = false;\n  }\n\n  if(argv.graphName){\n    config.dot.graphname = argv.graphName;        \n  }\n  if(argv.lineLength){\n    config.dot.lineLength = argv.lineLength;\n  }\n  if(argv.groupColors){\n    config.dot.groupColors = argv.groupColors;\n  }\n  \n  config.dot.graphVizSettings = config.dot.graphVizSettings ||{};\n  if(argv.concentration){\n    config.dot.graphVizSettings.concentration = argv.contentration;\n  }\n  if(argv.size){\n    config.dot.graphVizSettings.size = argv.size;\n  }\n  if(argv.ratio){\n    config.dot.graphVizSettings.ratio = argv.ratio;\n  }\n  if(argv.rankdir){\n    config.dot.graphVizSettings.rankdir = argv.rankdir;\n  }\n\n  \n  if(argv.inputGlob){\n    config.input = argv.inputGlob;\n  }\n  config.saveAs = config.saveAs ||config.SaveAsFilePlugin ||{};\n  if(argv.outputDir){\n    config.saveAs.outputDir = argv.outputDir;\n  }\n  config.verbose = argv.verbose ||config.verbose;  \n  config.watch = argv.watch ||config.watch;\n  config.process = ['preprocessor','parse-input','build-model','export-dot'];\n  if(!argv.stdout || argv.outputDir){\n    config.process.push('save-as-dot');\n  }\n  \n  if(argv.stdout){\n    config.process.push('stdout-dot');\n  }\n  app.load(config);  \n} \n"]}