{"version":3,"sources":["../../../src/commands/JSONCommand.js"],"names":["command","desc","builder","spaces","alias","describe","type","removeMap","removeEmbeddedRelations","handler","argv","config","loadConfig","json","JSONExport","exportMap","inputGlob","input","saveAs","SaveAsFilePlugin","outputDir","verbose","watch","process","load"],"mappings":";;;;;;;AAAA;;AAEO,IAAMA,4BAAU,8BAAhB;AACA,IAAMC,sBAAO,oCAAb;AACA,IAAMC,4BAAU;AACrBC,UAAQ;AACNC,WAAO,GADD;AAENC,cAAU,6BAFJ;AAGNC,UAAM;AAHA,GADa;AAMrBC,aAAW;AACTF,cAAU,iBADD;AAETC,UAAM;AAFG,GANU;AAUrBE,2BAAyB;AACvBH,cAAU,6DADa;AAEvBC,UAAM;AAFiB;AAVJ,CAAhB;AAeA,IAAMG,4BAAU,SAAVA,OAAU,CAASC,IAAT,EAAc;AACnC,MAAIC,SAAS,WAAIC,UAAJ,CAAeF,KAAKC,MAApB,CAAb;;AAEAA,SAAOE,IAAP,GAAcF,OAAOE,IAAP,IAAcF,OAAOG,UAArB,IAAkC,EAAhD;;AAEA,MAAGJ,KAAKP,MAAL,KAAgB,IAAnB,EAAwB;AACtBQ,WAAOE,IAAP,CAAYV,MAAZ,GAAqBO,KAAKP,MAA1B;AACD;AACD,MAAGO,KAAKF,uBAAR,EAAgC;AAC9BG,WAAOE,IAAP,CAAYL,uBAAZ,GAAsC,IAAtC;AACD;AACD,MAAGE,KAAKH,SAAR,EAAkB;AAChBI,WAAOE,IAAP,CAAYE,SAAZ,GAAwB,KAAxB;AACD;;AAED,MAAGL,KAAKM,SAAR,EAAkB;AAChBL,WAAOM,KAAP,GAAeP,KAAKM,SAApB;AACD;AACDL,SAAOO,MAAP,GAAgBP,OAAOO,MAAP,IAAgBP,OAAOQ,gBAAvB,IAA0C,EAA1D;AACA,MAAGT,KAAKU,SAAR,EAAkB;AAChBT,WAAOO,MAAP,CAAcE,SAAd,GAA0BV,KAAKU,SAA/B;AACD;;AAEDT,SAAOU,OAAP,GAAiBX,KAAKW,OAAL,IAAeV,OAAOU,OAAvC;AACAV,SAAOW,KAAP,GAAeZ,KAAKY,KAAL,IAAaX,OAAOW,KAAnC;AACAX,SAAOY,OAAP,GAAiB,CAAC,cAAD,EAAgB,aAAhB,EAA8B,cAA9B,CAAjB;AACA,aAAIC,IAAJ,CAASb,MAAT;AACD,CA3BM","file":"JSONCommand.js","sourcesContent":["import {app} from '../index.js';\n\nexport const command = 'json [inputGlob] [outputDir]';\nexport const desc = 'export Argdown input as JSON files';\nexport const builder = {\n  spaces: {\n    alias: 's',\n    describe: 'Spaces used for indentation',\n    type: 'number'\n  },\n  removeMap: {\n    describe: 'Remove map data',\n    type: 'boolean'\n  },\n  removeEmbeddedRelations: {\n    describe: 'Remove relations embedded in statement and relation objects',\n    type: 'boolean'\n  }\n};\nexport const handler = function(argv){\n  let config = app.loadConfig(argv.config);\n  \n  config.json = config.json ||config.JSONExport ||{};\n\n  if(argv.spaces !== null){\n    config.json.spaces = argv.spaces;\n  }\n  if(argv.removeEmbeddedRelations){\n    config.json.removeEmbeddedRelations = true;        \n  }\n  if(argv.removeMap){\n    config.json.exportMap = false;\n  }\n  \n  if(argv.inputGlob){\n    config.input = argv.inputGlob;\n  }\n  config.saveAs = config.saveAs ||config.SaveAsFilePlugin ||{};\n  if(argv.outputDir){\n    config.saveAs.outputDir = argv.outputDir;\n  }\n  \n  config.verbose = argv.verbose ||config.verbose;\n  config.watch = argv.watch ||config.watch;\n  config.process = [\"preprocessor\",\"export-json\",\"save-as-json\"];\n  app.load(config);  \n} \n"]}