{"version":3,"sources":["../../../src/commands/DefaultCommand.js"],"names":["command","desc","handler","argv","config","loadConfig","logLevel","verbose","watch","logParserErrors","load","catch","e","console","log"],"mappings":";;;;;;;AAAA;;AAEO,MAAMA,4BAAU,GAAhB;AACA,MAAMC,sBAAO,kCAAb;AACA,MAAMC,4BAAU,UAASC,IAAT,EAAe;AACpC,MAAIC,SAAS,WAAIC,UAAJ,CAAeF,KAAKC,MAApB,CAAb;AACAA,SAAOE,QAAP,GAAkBH,KAAKI,OAAL,GAAe,SAAf,GAA2BH,OAAOE,QAApD;AACAF,SAAOI,KAAP,GAAeL,KAAKK,KAAL,IAAcJ,OAAOI,KAApC;AACAJ,SAAOK,eAAP,GAAyBN,KAAKM,eAAL,IAAwBL,OAAOK,eAAxD;AACA,aAAIC,IAAJ,CAASN,MAAT,EAAiBO,KAAjB,CAAuBC,KAAKC,QAAQC,GAAR,CAAYF,CAAZ,CAA5B;AACD,CANM","file":"DefaultCommand.js","sourcesContent":["import { app } from \"../index.js\";\n\nexport const command = \"*\";\nexport const desc = \"load config file and run process\";\nexport const handler = function(argv) {\n  let config = app.loadConfig(argv.config);\n  config.logLevel = argv.verbose ? \"verbose\" : config.logLevel;\n  config.watch = argv.watch || config.watch;\n  config.logParserErrors = argv.logParserErrors || config.logParserErrors;\n  app.load(config).catch(e => console.log(e));\n};\n"]}